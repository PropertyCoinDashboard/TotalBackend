version: '3.9'

services:   
  stock_redis:
    container_name: stock-redis
    image: redis:latest
    ports:
      - "6379:6380"
    networks:
      - drf-network

  stock_sql:
    container_name: stock-sql
    image: mysql:8
    ports:
      - "3307:3306"
    env_file:
      - ./.env
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_AUTH_PLUGIN=caching_sha2_password
      - TZ=Asia/Seoul
    command:
      - --default-authentication-plugin=caching_sha2_password
      - --collation-server=utf8mb4_unicode_ci
      - --character-set-server=utf8mb4
      - --lower_case_table_names=1
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
        test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD']
        interval: 10s
        timeout: 2s
        retries: 100
    networks:
      - drf-network 

  stock_backend:
    container_name: stock-django
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command:
      - /bin/sh
      - -c
      - /usr/src/local/entrypoint.sh
    volumes:
      - ./backend/:/backend
      - static-volume:/backend/config/static
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      stock_sql:
        condition: service_healthy    
    networks:
      - drf-network

  stock_ngnix:
    container_name: stock-nginx
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/con.f/nginx-setup.conf
      - static-volume:/backend/config/static
    environment:
      - buffer-size=65535
    depends_on:
      - stock_redis
      - stock_backend
    networks:
      - drf-network


networks:
  drf-network:
    external: 
      name: kafka-network

volumes:
  stock_redis:
  stock_nginx:
  stock_backend:
  static-volume:
  mysql_data: {}
