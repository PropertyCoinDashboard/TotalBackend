version: '3.9'

services:   
  redis:
    container_name: stock-redis
    image: redis:latest
    ports:
      - "6379:6380"
    networks:
      - drf-network

  sql:
    container_name: stock-sql
    image: mysql
    ports:
      - "3307:3306"
    env_file:
      - ./.env
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USERNAME=${DB_USERNAME}
      - TZ=Asia/Seoul
    command:
      - --default-authentication-plugin=mysql_native_password
      - --collation-server=utf8mb4_unicode_ci
      - --character-set-server=utf8mb4
      - --lower_case_table_names=1
    volumes:
      - .sqlVolume:/var/lib/mysql
    networks:
      - drf-network 

  backend:
    container_name: stock-django
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command:
      - /bin/sh
      - -c
      - /usr/src/local/entrypoint.sh
    volumes:
      - ./backend/:/backend
      - static-volume:/backend/config/static
    env_file:
      - ./.env
    expose:
      - "8000"
    depends_on:
      - sql
      - redis
    networks:
      - drf-network

  ngnix:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    container_name: stock-nginx
    ports:
      - "8081:8081"
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/con.f/nginx-setup.conf
      - static-volume:/backend/config/static
    environment:
      - buffer-size=65535
    depends_on:
      - sql
      - redis
      - backend
    networks:
      - drf-network


networks:
  drf-network:
    external: 
      name: kafka-network

volumes:
  sql:
  redis:
  nginx:
  backend:
  static-volume:
  mysql_data: {}
