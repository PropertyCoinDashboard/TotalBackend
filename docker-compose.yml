version: '3.9'

services:
  sql:
    container_name: stock-sql
    image: mysql
    ports:
      - "3307:3306"
    env_file:
      - ./.env
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USERNAME=${DB_USERNAME}
      - TZ=Asia/Seoul
    command:
      - --default-authentication-plugin=mysql_native_password
      - --collation-server=utf8mb4_unicode_ci
      - --character-set-server=utf8mb4
      - --lower_case_table_names=1
    volumes:
      - .sqlVolume:/var/lib/mysql

  backend:
    container_name: stock-django
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command:
      - /bin/sh
      - -c
      - /usr/src/local/entrypoint.sh
    volumes:
      - ./backend/:/backend
      - static-volume:/backend/config/static
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      - sql
  
  ngnix:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    container_name: stock-nginx
    ports:
      - "8081:8081"
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/con.f/nginx-setup.conf
      - static-volume:/backend/config/static
    depends_on:
      - sql
      - backend

  # zookeeper:
  #   image: zookeeper:3.7
  #   hostname: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOO_MY_ID: 1
  #     ZOO_PORT: 2181
  #   volumes:
  #     - ./data/zookeeper/data:/data
  #     - ./data/zookeeper/datalog:/datalogco

  # kafka1:
  #   container_name: kafka1
  #   image: confluentinc/cp-kafka:7.0.0
  #   hostname: kafka1
  #   ports:
  #     - "9091:9091"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
  #     KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   volumes:
  #     - ./data/kafka1/data:/tmp/kafka-logs
  #   depends_on:
  #     - zookeeper

  # kafdrop:
  #   container_name: kafdrop
  #   image: obsidiandynamics/kafdrop
  #   restart: "no"
  #   ports: 
  #     - "9000:9000"
  #   environment:
  #     KAFKA_BROKER_CONNECT: "kafka1:19091"
  #   depends_on:
  #     - kafka1


volumes:
  mysql:
  nginx:
  backend:
  build_file:
  static-volume: